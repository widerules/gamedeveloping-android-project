#summary Концепция и модель проекта

=О проекте:=
*Название:* "Нахватчики караванов"

=Концепция:=
Игрок управляет бандой воров, цель которых ограбить караван и получить содержимое повозок.

Игра состоит из нескольких направлений

===Экономика===
В эту часть входит наём новых бойцов, усовершенствование текущих, обмен награбленного на игровые деньги и предметы

===Стратегия===
Долгосрочное планирование. Выбор целей для атаки, планирование найма бойцов.

===Тактика ===
Расстановка юнитов в засаде, ведения боя.
http://gamedeveloping-android-project.googlecode.com/svn/trunk/Project%20Management/concept.png

=== Типичный use-case ===
Игрок выбирает караван для атаки и находит на его маршруте место для засады.
`Место для засады - отдельный экран`
После выбора игрок расставляет на поле для засады юнитов.
Поле представляет из себя сетку из квадратов одинаковой длины и ширины. В каждой клетке может находиться только 1 юнит. Маршрут каравана задан изначально и отмечен на поле. Караван может двигаться только по клеткам, тип которых "дорога". В случае блокирования дороги каким-либо юнитом караван останавливается до тех пор пока препятствие не исчезнет.

После расстановки юнитов пользователь запускает эмуляцию.
В процессе эмуляции игрок управляет юнитами, расставленными на определённых местах маршрута.
Действием "свайп" (swipe) от клетки юнита до клетки действия, пользователь указывает цель для действия.
Возможные действия: атака каравана, блокирование клетки, движение юнита

Игра имеет фазовую модель. В каждую фазу юнит может совершить только одно действие. Для игрока "фазовость" игры прослеживается посредствoм счетчика клеток, которые осталось проехать каравану по полю, чтобы скрыться из виду.

В начале каждой фазы определяется какие действия будут совершены, после чего начинается их исполнение. Последним действием просчитывается движение каравана.


=Детали Реализации=
Игра состоит из нескольких экранов:
 * Загрузка приложения
 * Главного меню
 * Карта мира
 * Карта места засады
 * Найм бойцов

{{{Подробное описание с эскизами(или сразу скриншотами) надо сделать на отдельной странице}}}

==Диаграмма классов:==
http://gamedeveloping-android-project.googlecode.com/svn/wiki/uml_v0.1.png

==Реализация выполнения комманд==
У нас есть интерфейс Action, в котором объявлена функция perform()
Все классы, которые что-то делают - реализуют этот интерфейс.

В программе есть сущность (например List) которая на моменте "планирования" нападения заполняется Action'ами.

Также в Action есть поле "задержка выполнения" в интах от начала симуляции.
После завершения планирования мы сортируем List по этому полю и выполняем по порядку.

выполнение:
1. достаем очередной элемент из листа
2. делаем delay для потока на необходимое время
3. выполняем действие
4. goto 1.